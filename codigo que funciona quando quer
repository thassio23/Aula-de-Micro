#include <msp430g2553.h>

void atraso(volatile unsigned int x)
{
  TACCR0 = 100-1;
  TACTL |= TACLR;
  TACTL = TASSEL_2 + ID_0 + MC_1;
  while(x>0)
  {
    x--;
    while((TACTL & TAIFG) == 0);
    TACTL &=~TAIFG;
  }
  TACTL = MC_0;
}

int regrade3(unsigned int x)
{
  int pwm;
  pwm = (x*17/1023) + 5;
  
  
  return pwm;
}

void main(void)
{
	{
                unsigned int ValorRecebido;
                int ValorAtraso;
		WDTCTL = WDTPW + WDTHOLD;		
		BCSCTL2 &= ~(DIVS_3);	
                ADC10CTL1 = INCH_5 + ADC10DIV_3 ;         
                ADC10CTL0 = SREF_0 + ADC10SHT_3 + ADC10ON; 
                ADC10AE0 |= BIT5;                     
		P1SEL |= BIT5;
                BCSCTL1 = CALBC1_1MHZ;		
                DCOCTL = CALDCO_1MHZ;	
                P1OUT = 0;
                P1DIR |= BIT4 + BIT0 + BIT6;
                
                  P1REN |= BIT3;                   // Enable internal pull-up/down resistors
  P1OUT |= BIT3;                   //Select pull-up mode for P1.3
  P1IE |= BIT3;                       // P1.3 interrupt enabled
  P1IES |= BIT3;                     // P1.3 Hi/lo edge
  P1IFG &= ~BIT3;                  // P1.3 IFG cleared
  _BIS_SR(0);          // Enter LPM0 w/ interrupt 
                
		while(1)
		{
			atraso(10);				
			ADC10CTL0 |= ENC + ADC10SC;			
			ValorRecebido = ADC10MEM;
                         ValorAtraso = 190;
                         atraso(ValorAtraso);
                         P1OUT = BIT4;
                         ValorAtraso = regrade3(ValorRecebido);
                         atraso(ValorAtraso);
                         P1OUT = 0;
                        
		}
 
	}
}




#pragma vector=PORT1_VECTOR
__interrupt void Port_1(void)
{    
   P1OUT ^= BIT6;                      // Toggle P1.6
   P1IFG &= ~BIT3;                     // P1.3 IFG cleared 
}
